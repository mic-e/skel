#!/bin/bash
# mounts/umounts plain dm-crypt partitions with my favourite options

test $UID -eq 0 && PREFIX="" || PREFIX="sudo "

function usage() {
	echo "Usage:"
	echo "$0 device mountpoint [flags]"
	echo "$0 -u mountpoint"
	exit 2
}

function error() {
	echo "$@"
	exit 1
}

function cscreate() {
	$PREFIX cryptsetup create "$CRYPT" "$DEV" --cipher twofish-xts-plain64 --key-size 512 --hash sha512
}

function csremove() {
	$PREFIX cryptsetup remove "$CRYPT"
}

function mnt() {
	$PREFIX mount -t btrfs -o compress=zlib,noatime,user "/dev/mapper/$CRYPT" "$MOUNTPOINT"
}

function umnt() {
	$PREFIX umount "/dev/mapper/$CRYPT"
}

if [[ $1 == "-u" ]]; then
	test $# -ne 1 && usage
	MOUNTPOINT="$1"
	# find the crypt device name
	devs="$(findmnt -n "$MOUNTPOINT" | tr -s ' ' | cut -d' ' -f 2)"
	if [ "$(echo "$devs" | wc -l)" -ne 1 ]
	then
		error "bad mountpoint: $MOUNTPOINT"
	fi
	if [[ $devs =~ ^/dev/mapper/[a-zA-Z0-9]+$ ]]; then
		CRYPT="${BASH_REMATCH[1]}"
	else
		error "not a proper crypt device: $devs"
	fi
	# umount
	umnt || error "Could not umount $MOUNTPOINT"
	csremove
else
	test $# -lt 2 && usage

	# mount
	DEV="$1"
	MOUNTPOINT="$2"
	shift 2

	# find a free crypt device name
	COUNTER=0
	while [ -e "/dev/mapper/crypt$COUNTER" ]; do
		let COUNTER=$COUNTER+1
	done
	CRYPT="crypt$COUNTER"

	cscreate || error "Could not create crypt device"
	mnt "$@" || csremove
fi
